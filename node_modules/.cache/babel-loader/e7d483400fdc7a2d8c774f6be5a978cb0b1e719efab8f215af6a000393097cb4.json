{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jose\\\\Desktop\\\\Proyectos\\\\la-batata\\\\src\\\\components\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Player from './Player';\nimport ScoreBoard from './ScoreBoard';\nimport SpecialButtons from './SpecialButtons';\nimport '../styles/Game.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const [numPlayers, setNumPlayers] = useState(0);\n  const [playersSet, setPlayersSet] = useState(false);\n  const [players, setPlayers] = useState([]);\n  const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\n  const [scores, setScores] = useState({});\n\n  // Crear cantidad de jugadores indicados\n  const setupPlayers = () => {\n    const newPlayers = [];\n    for (let i = 1; i <= numPlayers; i++) {\n      newPlayers.push({\n        name: `Jugador ${i}`,\n        score: 0,\n        inGame: false\n      });\n    }\n    setPlayers(newPlayers);\n    setPlayersSet(true);\n    console.log(newPlayers);\n  };\n\n  // Cambiar de turno\n  const nextPlayer = () => {\n    setCurrentPlayerIndex((currentPlayerIndex + 1) % players.length);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: !playersSet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ingrese la cantidad de jugadores (m\\xE1s de 1):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: \"2\",\n        value: numPlayers,\n        onChange: e => setNumPlayers(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setupPlayers,\n        children: \"Configurar Jugadores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ScoreBoard, {\n        players: players\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Player, {\n        player: players[currentPlayerIndex],\n        players: players,\n        setPlayers: setPlayers,\n        nextPlayer: nextPlayer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Game, \"lYpPBVF0sLFXvn9H2SBsEZ0RCX8=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","Player","ScoreBoard","SpecialButtons","jsxDEV","_jsxDEV","Fragment","_Fragment","Game","_s","numPlayers","setNumPlayers","playersSet","setPlayersSet","players","setPlayers","currentPlayerIndex","setCurrentPlayerIndex","scores","setScores","setupPlayers","newPlayers","i","push","name","score","inGame","console","log","nextPlayer","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","min","value","onChange","e","parseInt","target","onClick","player","_c","$RefreshReg$"],"sources":["C:/Users/Jose/Desktop/Proyectos/la-batata/src/components/Game.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Player from './Player';\r\nimport ScoreBoard from './ScoreBoard';\r\nimport SpecialButtons from './SpecialButtons';\r\nimport '../styles/Game.scss';\r\n\r\nconst Game = () => {\r\n    const [numPlayers, setNumPlayers] = useState(0);\r\n    const [playersSet, setPlayersSet] = useState(false);\r\n    const [players, setPlayers] = useState([]);\r\n    const [currentPlayerIndex, setCurrentPlayerIndex] = useState(0);\r\n    const [scores, setScores] = useState({});\r\n    \r\n    // Crear cantidad de jugadores indicados\r\n    const setupPlayers = () => {\r\n        const newPlayers = [];\r\n        for (let i = 1; i <= numPlayers; i++) {\r\n            newPlayers.push({ name: `Jugador ${i}`, score: 0, inGame: false });\r\n        }\r\n        setPlayers(newPlayers);\r\n        setPlayersSet(true);\r\n        console.log(newPlayers);\r\n    };\r\n    \r\n    // Cambiar de turno\r\n    const nextPlayer = () => {\r\n        setCurrentPlayerIndex((currentPlayerIndex + 1) % players.length);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"game\">\r\n            {!playersSet ? (\r\n                <div>\r\n                <h2>Ingrese la cantidad de jugadores (m√°s de 1):</h2>\r\n                <input\r\n                    type=\"number\"\r\n                    min=\"2\"\r\n                    value={numPlayers}\r\n                    onChange={(e) => setNumPlayers(parseInt(e.target.value))}\r\n                />\r\n                <button onClick={setupPlayers}>Configurar Jugadores</button>\r\n                </div>\r\n            ) : (\r\n                <>\r\n                <ScoreBoard players={players} />\r\n                <Player\r\n                    player={players[currentPlayerIndex]}\r\n                    players={players}\r\n                    setPlayers={setPlayers}\r\n                    nextPlayer={nextPlayer}\r\n                />\r\n                </>\r\n            )}\r\n            </div>\r\n        );\r\n};\r\n\r\nexport default Game;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}